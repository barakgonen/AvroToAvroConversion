/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package org.mashov.bla.schema.data.entity;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** blablablabla */
@org.apache.avro.specific.AvroGenerated
public class BgUnion extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -595004125204515877L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"BgUnion\",\"namespace\":\"org.mashov.bla.schema.data.entity\",\"doc\":\"blablablabla\",\"fields\":[{\"name\":\"first\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"BgRecord\",\"doc\":\"blablablabla\",\"fields\":[{\"name\":\"first\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"bbbbbbb\",\"default\":null},{\"name\":\"second\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"bbbbbbb\",\"default\":\"\"},{\"name\":\"third\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"bbbbbbb\",\"default\":\"t\"},{\"name\":\"forth\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"bbbbbbb\",\"default\":\"defaultEmpty\"}]}],\"doc\":\"bbbbbbb\",\"default\":null},{\"name\":\"second\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"InitializeParametersDt\",\"namespace\":\"org.mashov.avro.services.bla.samples.structures\",\"fields\":[{\"name\":\"reportingSystemId\",\"type\":\"long\",\"default\":0},{\"name\":\"callSign\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"default\":\"\"},{\"name\":\"privateNetworkNumber\",\"type\":\"long\",\"default\":0},{\"name\":\"globalNetworkNumber\",\"type\":\"long\",\"default\":0},{\"name\":\"blaBlaSecond\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"formNumber\",\"type\":\"int\",\"default\":-1},{\"name\":\"blaBla\",\"type\":[\"null\",\"int\"],\"default\":null}]}],\"doc\":\"bbbbbbb\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<BgUnion> ENCODER =
      new BinaryMessageEncoder<BgUnion>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<BgUnion> DECODER =
      new BinaryMessageDecoder<BgUnion>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<BgUnion> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<BgUnion> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<BgUnion> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<BgUnion>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this BgUnion to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a BgUnion from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a BgUnion instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static BgUnion fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** bbbbbbb */
  @Deprecated public org.mashov.bla.schema.data.entity.BgRecord first;
  /** bbbbbbb */
  @Deprecated public org.mashov.avro.services.bla.samples.structures.InitializeParametersDt second;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public BgUnion() {}

  /**
   * All-args constructor.
   * @param first bbbbbbb
   * @param second bbbbbbb
   */
  public BgUnion(org.mashov.bla.schema.data.entity.BgRecord first, org.mashov.avro.services.bla.samples.structures.InitializeParametersDt second) {
    this.first = first;
    this.second = second;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return first;
    case 1: return second;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: first = (org.mashov.bla.schema.data.entity.BgRecord)value$; break;
    case 1: second = (org.mashov.avro.services.bla.samples.structures.InitializeParametersDt)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'first' field.
   * @return bbbbbbb
   */
  public org.mashov.bla.schema.data.entity.BgRecord getFirst() {
    return first;
  }


  /**
   * Sets the value of the 'first' field.
   * bbbbbbb
   * @param value the value to set.
   */
  public void setFirst(org.mashov.bla.schema.data.entity.BgRecord value) {
    this.first = value;
  }

  /**
   * Gets the value of the 'second' field.
   * @return bbbbbbb
   */
  public org.mashov.avro.services.bla.samples.structures.InitializeParametersDt getSecond() {
    return second;
  }


  /**
   * Sets the value of the 'second' field.
   * bbbbbbb
   * @param value the value to set.
   */
  public void setSecond(org.mashov.avro.services.bla.samples.structures.InitializeParametersDt value) {
    this.second = value;
  }

  /**
   * Creates a new BgUnion RecordBuilder.
   * @return A new BgUnion RecordBuilder
   */
  public static org.mashov.bla.schema.data.entity.BgUnion.Builder newBuilder() {
    return new org.mashov.bla.schema.data.entity.BgUnion.Builder();
  }

  /**
   * Creates a new BgUnion RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new BgUnion RecordBuilder
   */
  public static org.mashov.bla.schema.data.entity.BgUnion.Builder newBuilder(org.mashov.bla.schema.data.entity.BgUnion.Builder other) {
    if (other == null) {
      return new org.mashov.bla.schema.data.entity.BgUnion.Builder();
    } else {
      return new org.mashov.bla.schema.data.entity.BgUnion.Builder(other);
    }
  }

  /**
   * Creates a new BgUnion RecordBuilder by copying an existing BgUnion instance.
   * @param other The existing instance to copy.
   * @return A new BgUnion RecordBuilder
   */
  public static org.mashov.bla.schema.data.entity.BgUnion.Builder newBuilder(org.mashov.bla.schema.data.entity.BgUnion other) {
    if (other == null) {
      return new org.mashov.bla.schema.data.entity.BgUnion.Builder();
    } else {
      return new org.mashov.bla.schema.data.entity.BgUnion.Builder(other);
    }
  }

  /**
   * RecordBuilder for BgUnion instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<BgUnion>
    implements org.apache.avro.data.RecordBuilder<BgUnion> {

    /** bbbbbbb */
    private org.mashov.bla.schema.data.entity.BgRecord first;
    private org.mashov.bla.schema.data.entity.BgRecord.Builder firstBuilder;
    /** bbbbbbb */
    private org.mashov.avro.services.bla.samples.structures.InitializeParametersDt second;
    private org.mashov.avro.services.bla.samples.structures.InitializeParametersDt.Builder secondBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.mashov.bla.schema.data.entity.BgUnion.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.first)) {
        this.first = data().deepCopy(fields()[0].schema(), other.first);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasFirstBuilder()) {
        this.firstBuilder = org.mashov.bla.schema.data.entity.BgRecord.newBuilder(other.getFirstBuilder());
      }
      if (isValidValue(fields()[1], other.second)) {
        this.second = data().deepCopy(fields()[1].schema(), other.second);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasSecondBuilder()) {
        this.secondBuilder = org.mashov.avro.services.bla.samples.structures.InitializeParametersDt.newBuilder(other.getSecondBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing BgUnion instance
     * @param other The existing instance to copy.
     */
    private Builder(org.mashov.bla.schema.data.entity.BgUnion other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.first)) {
        this.first = data().deepCopy(fields()[0].schema(), other.first);
        fieldSetFlags()[0] = true;
      }
      this.firstBuilder = null;
      if (isValidValue(fields()[1], other.second)) {
        this.second = data().deepCopy(fields()[1].schema(), other.second);
        fieldSetFlags()[1] = true;
      }
      this.secondBuilder = null;
    }

    /**
      * Gets the value of the 'first' field.
      * bbbbbbb
      * @return The value.
      */
    public org.mashov.bla.schema.data.entity.BgRecord getFirst() {
      return first;
    }


    /**
      * Sets the value of the 'first' field.
      * bbbbbbb
      * @param value The value of 'first'.
      * @return This builder.
      */
    public org.mashov.bla.schema.data.entity.BgUnion.Builder setFirst(org.mashov.bla.schema.data.entity.BgRecord value) {
      validate(fields()[0], value);
      this.firstBuilder = null;
      this.first = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'first' field has been set.
      * bbbbbbb
      * @return True if the 'first' field has been set, false otherwise.
      */
    public boolean hasFirst() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'first' field and creates one if it doesn't exist yet.
     * bbbbbbb
     * @return This builder.
     */
    public org.mashov.bla.schema.data.entity.BgRecord.Builder getFirstBuilder() {
      if (firstBuilder == null) {
        if (hasFirst()) {
          setFirstBuilder(org.mashov.bla.schema.data.entity.BgRecord.newBuilder(first));
        } else {
          setFirstBuilder(org.mashov.bla.schema.data.entity.BgRecord.newBuilder());
        }
      }
      return firstBuilder;
    }

    /**
     * Sets the Builder instance for the 'first' field
     * bbbbbbb
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.mashov.bla.schema.data.entity.BgUnion.Builder setFirstBuilder(org.mashov.bla.schema.data.entity.BgRecord.Builder value) {
      clearFirst();
      firstBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'first' field has an active Builder instance
     * bbbbbbb
     * @return True if the 'first' field has an active Builder instance
     */
    public boolean hasFirstBuilder() {
      return firstBuilder != null;
    }

    /**
      * Clears the value of the 'first' field.
      * bbbbbbb
      * @return This builder.
      */
    public org.mashov.bla.schema.data.entity.BgUnion.Builder clearFirst() {
      first = null;
      firstBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'second' field.
      * bbbbbbb
      * @return The value.
      */
    public org.mashov.avro.services.bla.samples.structures.InitializeParametersDt getSecond() {
      return second;
    }


    /**
      * Sets the value of the 'second' field.
      * bbbbbbb
      * @param value The value of 'second'.
      * @return This builder.
      */
    public org.mashov.bla.schema.data.entity.BgUnion.Builder setSecond(org.mashov.avro.services.bla.samples.structures.InitializeParametersDt value) {
      validate(fields()[1], value);
      this.secondBuilder = null;
      this.second = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'second' field has been set.
      * bbbbbbb
      * @return True if the 'second' field has been set, false otherwise.
      */
    public boolean hasSecond() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'second' field and creates one if it doesn't exist yet.
     * bbbbbbb
     * @return This builder.
     */
    public org.mashov.avro.services.bla.samples.structures.InitializeParametersDt.Builder getSecondBuilder() {
      if (secondBuilder == null) {
        if (hasSecond()) {
          setSecondBuilder(org.mashov.avro.services.bla.samples.structures.InitializeParametersDt.newBuilder(second));
        } else {
          setSecondBuilder(org.mashov.avro.services.bla.samples.structures.InitializeParametersDt.newBuilder());
        }
      }
      return secondBuilder;
    }

    /**
     * Sets the Builder instance for the 'second' field
     * bbbbbbb
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public org.mashov.bla.schema.data.entity.BgUnion.Builder setSecondBuilder(org.mashov.avro.services.bla.samples.structures.InitializeParametersDt.Builder value) {
      clearSecond();
      secondBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'second' field has an active Builder instance
     * bbbbbbb
     * @return True if the 'second' field has an active Builder instance
     */
    public boolean hasSecondBuilder() {
      return secondBuilder != null;
    }

    /**
      * Clears the value of the 'second' field.
      * bbbbbbb
      * @return This builder.
      */
    public org.mashov.bla.schema.data.entity.BgUnion.Builder clearSecond() {
      second = null;
      secondBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public BgUnion build() {
      try {
        BgUnion record = new BgUnion();
        if (firstBuilder != null) {
          try {
            record.first = this.firstBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("first"));
            throw e;
          }
        } else {
          record.first = fieldSetFlags()[0] ? this.first : (org.mashov.bla.schema.data.entity.BgRecord) defaultValue(fields()[0]);
        }
        if (secondBuilder != null) {
          try {
            record.second = this.secondBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("second"));
            throw e;
          }
        } else {
          record.second = fieldSetFlags()[1] ? this.second : (org.mashov.avro.services.bla.samples.structures.InitializeParametersDt) defaultValue(fields()[1]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<BgUnion>
    WRITER$ = (org.apache.avro.io.DatumWriter<BgUnion>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<BgUnion>
    READER$ = (org.apache.avro.io.DatumReader<BgUnion>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.first == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.first.customEncode(out);
    }

    if (this.second == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      this.second.customEncode(out);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.first = null;
      } else {
        if (this.first == null) {
          this.first = new org.mashov.bla.schema.data.entity.BgRecord();
        }
        this.first.customDecode(in);
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.second = null;
      } else {
        if (this.second == null) {
          this.second = new org.mashov.avro.services.bla.samples.structures.InitializeParametersDt();
        }
        this.second.customDecode(in);
      }

    } else {
      for (int i = 0; i < 2; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.first = null;
          } else {
            if (this.first == null) {
              this.first = new org.mashov.bla.schema.data.entity.BgRecord();
            }
            this.first.customDecode(in);
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.second = null;
          } else {
            if (this.second == null) {
              this.second = new org.mashov.avro.services.bla.samples.structures.InitializeParametersDt();
            }
            this.second.customDecode(in);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










